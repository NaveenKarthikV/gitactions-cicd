name: Compare the branches
on:
  push: 
    branches:
      - main
    paths:
      - 'folder1/**'
      - 'folder2/**'
      - 'sql/**'
  pull_request:
    branches:
      - otherbranch  
    paths:
    - 'dags/**'
    - 'utils/**'
    - 'sql/**' 

  workflow_dispatch:

 

jobs:  
   Compare_the_branches:    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3         
        with:
          fetch-depth: 2    

      - name: check the Difference
        id: Finddiff        
        run:  echo "::set-output name=fileswithdepth::$(git diff --name-status ${{ github.event.before }} ${{ github.sha }} | xargs)"           
        shell: bash
        
      - name: Changed files
        id: getfile
        run: |
          echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)"
      - name: echo output
        run: |
          echo ${{ steps.getfile.outputs.files }} 

      - name: Move the files to temp directory
        id: Movefiles    
        run:  |        
          echo "Files in previous versus current version: ${{ steps.Finddiff.outputs.fileswithdepth }} "    
          echo "Files modified in current check in: ${{steps.files.outputs.added_modified}} "
          mkdir -p temp_dags/{utils,plugins,sql}  
          myarray="${{ steps.Finddiff.outputs.fileswithdepth }}"
          changelist=(${myarray// / })
          len=${#changelist[@]}
          echo "${myarray} has ${len} elements"    
          for ((i=0; i<${len}; i++)) ; do
            case "${changelist[$i]}" in
              A | M | C | T | "R100" )
                if [ "${changelist[$i]}" = "R100" ]; then  
                  change_file="${changelist[$i+2]}"
                  file_path=$(dirname "${changelist[$i+2]}")
                  file_name=$(basename "${changelist[$i+2]}")
                else
                  change_file="${changelist[$i+1]}"
                  file_path=$(dirname "${changelist[$i+1]}")
                  file_name=$(basename "${changelist[$i+1]}") 
                fi
                 IFS='/'
                read -a root <<< "${file_path}"
                # root="${file_path##*/}"
                echo "${file_path} and ${file_name} with root as ${root[0]}"
                case  "${root[0]}" in 
                  "dags") 
                    echo "  > DAG loop:${file_path}/${file_name}."   
                    cp "${change_file}" temp_dags/ 
                    ;;
                  sql |  utils) 
                    echo "  > OUT loop:${file_path}/${file_name}." 
                    mkdir -p temp_dags/${file_path}  
                    cp --parents "${change_file}" "temp_dags"   
                    echo "file temp_dags/${file_path}  created"
                    ;; 
                esac
                ;;
              R | D)
                echo "-- ${changelist[$i+1]} no action done. "
                ;;
              esac
          done

          #cp utils/* temp_dags/utils/
          #cp plugins/* temp_dags/plugins/
          ls -R temp_dags/
          cd temp_dags







      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: naveenkarthikv/newrepository
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
